theme(axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
strip.text.y = element_text(angle = 180, hjust = 1))+
labs(title='Temperatures in Lincoln NE',
subtitle='Median temperatures (Fahrenheit) by month for 2016\nData: Original CSV from the Weather Underground')
ggplot(deney_cemre,aes(x = Diff,y=Exp,height=..density..))+
geom_joy(scale=2.5, alpha = 0.9) +
scale_x_continuous(limits = c(mins,maxs))+
theme_ipsum(grid=F)+
theme(axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
strip.text.y = element_text(angle = 180, hjust = 1))+
labs(title='Observation Distributions',
subtitle='Ne difference distributions for each experiment')
ggplot(deney_cemre,aes(x = Diff,y=Exp,height=..density..))+
geom_joy(scale=5, alpha = 0.9) +
scale_x_continuous(limits = c(mins,maxs))+
theme_ipsum(grid=F)+
theme(axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
strip.text.y = element_text(angle = 180, hjust = 1))+
labs(title='Observation Distributions',
subtitle='Ne difference distributions for each experiment')
ggplot(deney_cemre,aes(x = Diff,y=Exp,height=..density..))+
geom_joy(scale=5, alpha = 0.7) +
scale_x_continuous(limits = c(mins,maxs))+
theme_ipsum(grid=F)+
theme(axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
strip.text.y = element_text(angle = 180, hjust = 1))+
labs(title='Observation Distributions',
subtitle='Ne difference distributions for each experiment')
ggplot(deney_cemre,aes(x = Diff,y=Exp,height=..density..))+
geom_joy(scale=4, alpha = 0.7) +
scale_x_continuous(limits = c(mins,maxs))+
theme_ipsum(grid=F)+
theme(axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
strip.text.y = element_text(angle = 180, hjust = 1))+
labs(title='Observation Distributions',
subtitle='Ne difference distributions for each experiment')
ggplot(deney_cemre,aes(x = Diff,y=Exp,height=..density..))+
geom_joy(scale=4, alpha = 0.7) +
scale_x_continuous(expand = c(-0.02,0.5))+
theme_ipsum(grid=F)+
theme(axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
strip.text.y = element_text(angle = 180, hjust = 1))+
labs(title='Observation Distributions',
subtitle='Ne difference distributions for each experiment')
library(ggplot2)
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quintile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= (0.05, 0.95))+
scale_fill_manual(name = "Probability", values = "red", "grey80", "blue") +
theme_joy() +scale_y_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quintile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= (0.05, 0.95))+
scale_fill_manual(name = "Probability", values = "red", "grey80", "blue") +
theme_joy() +scale_y_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quintile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= (0.05, 0.95))+
scale_fill_manual(name = "Probability", values = "red", "grey80", "blue") +
theme_joy() +scale_x_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= (0.05, 0.95))+
scale_fill_manual(name = "Probability", values = "red", "grey80", "blue") +
theme_joy() +scale_x_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95))+
scale_fill_manual(name = "Probability", values = "red", "grey80", "blue") +
theme_joy() +scale_x_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95))+
scale_fill_manual(name = "Probability", values = "red", "grey80", "blue") +
theme_joy() +scale_y_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95))+
scale_fill_manual(name = "Probability", values = c("red", "grey80", "blue")) +
theme_joy() +scale_y_discrete(expand = c(0.01, 1))
scale_fill_manual(name = "Probability", values = c("red", "grey80", "blue"), alpha = 0.7 +
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95))+
scale_fill_manual(name = "Probability", values = c("red", "grey80", "blue"), alpha = 0.7)+
theme_joy() +scale_y_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95))+
scale_fill_manual(name = "Probability", values = c("red", "grey80", "blue"), alpha = 0.7)+
theme_joy() +scale_y_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95), alpha = 0.8)+
scale_fill_manual(name = "Probability", values = c("red", "grey80", "blue"))+
theme_joy() +scale_y_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95), alpha = 0.8)+
scale_fill_manual(name = "Probability",alpha = 0.8, values = c("red", "grey80", "blue"))+
theme_joy() +scale_y_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95), alpha = 0.8)+
scale_fill_manual(name = "Probability",alpha = 0.8, values = c("red", "grey80", "blue"))+
theme_joy() +scale_x_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95), alpha = 0.8)+
scale_fill_manual(name = "Probability", values = c("red", "grey80", "blue"))+
theme_joy() +scale_x_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95), alpha = 0.8)+
scale_fill_manual(name = "Probability", values = c("red", "grey80", "blue"))+
theme_joy() +scale_x_continuous(expand = c(0.01, 1)) +scale_y_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95), alpha = 0.8)+
scale_fill_manual(name = "Probability", values = c("red", "grey80", "blue"))+
theme_joy() +scale_y_discrete(expand = c(0.01, 1))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95), alpha = 0.8)+
scale_fill_manual(name = "Probability", values = c("red", "grey80", "blue"))+
theme_joy() +scale_y_discrete(expand = c(0.02, 0.5))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95), alpha = 0.8)+
scale_fill_manual(name = "Probability", values = c("red", "grey80", "blue"))+
theme_joy() +scale_y_discrete(expand = c(-0.02, 0.5))
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95), alpha = 0.8)+
scale_fill_manual(name = "Probability", values = c("red", "grey80", "blue"))+
theme_joy() +scale_y_continuous(expand = c(-0.02, 0.5))
discrete
ggplot(deney_cemre, aes(x = Diff, y= Exp, fill = factor(..quantile..)))+
geom_joy_gradient(calc_ecdf = TRUE, quantiles= c(0.05, 0.95), alpha = 0.8)+
scale_fill_manual(name = "Probability", values = c("red", "grey80", "blue"))+
theme_joy() +scale_y_discrete(expand = c(-0.02, 0.5))
ggplot(deney_cemre,aes(x = Diff,y=Exp,height=..density..))+
geom_joy(scale=4, alpha = 0.7) +
scale_x_continuous(expand = c(-0.02,0.5))+
theme_ipsum(grid=F)+
theme(axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
strip.text.y = element_text(angle = 180, hjust = 1))+
labs(title='Observation Distributions',
subtitle='Ne difference distributions for each experiment')
ggplot(deney_cemre,aes(x = Diff,y=Exp,height=..density..))+
geom_joy(scale=4, alpha = 0.7) +
scale_x_discrete(expand = c(-0.02,0.5))+
theme_ipsum(grid=F)+
theme(axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
strip.text.y = element_text(angle = 180, hjust = 1))+
labs(title='Observation Distributions',
subtitle='Ne difference distributions for each experiment')
continuous
mins<- -0.2
maxs<- 0.5
ggplot(deney_cemre,aes(x = Diff,y=Exp,height=..density..))+
geom_joy(scale=4, alpha = 0.7) +
scale_x_continuous(expand = c(mins,maxs))+
theme_ipsum(grid=F)+
theme(axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
strip.text.y = element_text(angle = 180, hjust = 1))+
labs(title='Observation Distributions',
subtitle='Ne difference distributions for each experiment')
hist(deney_cemre$Diff, breaks= 100)
hist(deney_cemre$Diff, breaks= 200)
hist(deney_cemre$Diff, breaks= 250)
hist(deney_cemre$Diff, breaks= 175)
if (suppressWarnings(require("velociraptr"))==FALSE) {
install.packages("velociraptr",repos="http://cran.cnr.berkeley.edu/");
library("velociraptr");
}
library(velociraptr)
# Download data from the Paleobiology Database
# This may take a couple of minutes.
DataPBDB<-velociraptr::downloadPBDB(Taxa=c("Tetrapoda"),StartInterval="Jurassic",StopInterval="Jurassic")
# Remove occurrences not properly resolved to the genus level.
DataPBDB<-velociraptr::cleanTaxonomy(DataPBDB,"genus")
# Download a matrix of geologic epoch definitions and metadata
# A necessary step for the constrainAges( ) function
Epochs<-velociraptr::downloadTime(Timescale="international epochs")
# Remove poorly constrained fossils
DataPBDB<-velociraptr::constrainAges(DataPBDB,Epochs)
View(DataPBDB)
PresencePBDB<-velociraptr::presenceMatrix(DataPBDB,Rows="early_interval",Columns="genus")
View(PresencePBDB)
write.table(PresencePBDB, file="mymatrix.txt", row.names=FALSE, col.names=FALSE)
getwd()
write.table(PresencePBDB, file="mymatrix.txt", row.names=TRUE, col.names=FALSE)
View(PresencePBDB)
PresencePBDB<-velociraptr::presenceMatrix(DataPBDB,Rows="geoplate",Columns="genus")
View(PresencePBDB)
write.table(PresencePBDB, file="mymatrix.txt", row.names=TRUE, col.names=TRUE)
View(PresencePBDB)
PresencePBDB[3,0] <- NULL
PresencePBDB[3,0] <- NULL
View(PresencePBDB)
PresencePBDB = PresencePBDB[!row.names(PresencePBDB)%in%"coordinates not computable using this model",]
View(PresencePBDB)
PresencePBDB<-velociraptr::presenceMatrix(DataPBDB,Rows="genus",Columns="geoplate")
View(PresencePBDB)
PresencePBDB[,3] <- NULL
PresencePBDB[,3]
PresencePBDB[3,]
PresencePBDB[,3] <- NULL
colnames(PresencePBDB[,3]) <- tat
colnames(PresencePBDB[,3]) <- "tat"
colnames(PresencePBDB[,3]) <- c("tat")
PresencePBDB$128
PresencePBDB$128 <- NULL
PresencePBDB = PresencePBDB[!col.names(PresencePBDB)%in%"coordinates not computable using this model",]
PresencePBDB = PresencePBDB[!column.names(PresencePBDB)%in%"coordinates not computable using this model",]
PresencePBDB = PresencePBDB[!colnames(PresencePBDB)%in%"coordinates not computable using this model",]
View(PresencePBDB)
PresencePBDB = PresencePBDB[!colnames(PresencePBDB)%in%"coordinates not computable using this model",]
PresencePBDB = PresencePBDB[!column(PresencePBDB)%in%"coordinates not computable using this model",]
PresencePBDB = PresencePBDB[!colnames(PresencePBDB)%in%"coordinates not computable using this model",]
View(PresencePBDB)
colnames(PresencePBDB)
colnames(PresencePBDB[3]) <- NULL
View(PresencePBDB)
colnames(PresencePBDB[3]) <- NULL
colnames(PresencePBDB[3]) <- NULL
colnames(PresencePBDB[3]) <- NULL
unlist(colnames(PresencePBDB))
a <- unlist(colnames(PresencePBDB))
a <- a[!a%in%"coordinates not computable using this model"]
colnames(PresencePBDB) <- a
a
PresencePBDB = PresencePBDB[!colnames(PresencePBDB)%in%"coordinates not computable using this model",]
PresencePBDB <-  PresencePBDB[!colnames(PresencePBDB)%in%"coordinates not computable using this model",]
View(PresencePBDB)
View(PresencePBDB)
colnames(PresencePBDB) <- PresencePBDB[,1]
write.csv(PresencePBDB, "deneme.csv")
library(readxl)
deneme <- read_excel("Desktop/deneme.xlsx")
View(deneme)
write.table(deneme, file="deneme_matrix", row.names=TRUE, col.names=TRUE)
write.table(deneme, file="deneme_matrix.txt", row.names=TRUE, col.names=TRUE)
write.table(deneme, file="deneme_matrix.txt", row.names=TRUE, col.names=FALSE)
library(readxl)
fragment <- read_excel("Desktop/fragment.xlsx")
View(fragment)
plot(fragment$Time, fragment$Index)
barplot(fragment$Time, fragment$Index)
(fragment$Midage, fragment$Index)
plot(fragment$Midage, fragment$Index)
write.csv(PresencePBDB, "deneme.csv", type = "l")
plot(fragment$Midage, fragment$Index, type = "l")
EarlyJurassicMap<-downloadPaleogeography(Age=190)
EarlyJurassicMap
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.33),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.45),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.22),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0,0,33),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.33),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.22),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0,0,0,0.22),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.33),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.33),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.33),lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.33),lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=rgb(2,0,0,0.33),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.3),lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=rgb(1,0,0.7,0.3),lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=rgb(4,90,141,0.3),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,4,90,141,0.3),lty=0,add=TRUE)
col = rgb(40,90,141)
plot(EarlyJurassicMap,col=c("dark blue"),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=c("dark blue", alpha = 0.5),lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=c("dark blue", alpha = 0.5),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=c("dark blue", alpha = 1),lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=c("dark blue", alpha = 1),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=c("blue"),lty=0.4,add=TRUE)
plot(EarlyJurassicMap,col=c("blue"),lty=1,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=c("blue"),lty=5,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=c("blue"),lty=10,add=TRUE)
?rgb
plaette()
rgb(4, 90, 141)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=rgb(0.68, 0.16, 0.00, 0.18),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(0.68, 0.16, 0.00, 0.18),lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=rgb(0.7412, 0.3176, 0.1843, 0.18),lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=cmy(0.9176, 0.4235, 0.2941),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=cmyk(0.9176, 0.4235, 0.2941),lty=0,add=TRUE)
cmyk <- function(C,M,Y,K) {
cmyk <- function(C,M,Y,K) {
C <- C / 100.0
M <- M / 100.0
Y <- Y / 100.0
K <- K / 100.0
n.c <- (C * (1-K) + K)
n.m <- (M * (1-K) + K)
n.y <- (Y * (1-K) + K)
r.col <- ceiling(255 * (1-n.c))
g.col <- ceiling(255 * (1-n.m))
b.col <- ceiling(255 * (1-n.y))
return(col2rgb(sprintf("#%02s%02s%02s",
as.hexmode(r.col),
as.hexmode(g.col),
as.hexmode(b.col))))
cmyk <- function(C,M,Y,K) {
C <- C / 100.0
M <- M / 100.0
Y <- Y / 100.0
K <- K / 100.0
n.c <- (C * (1-K) + K)
n.m <- (M * (1-K) + K)
n.y <- (Y * (1-K) + K)
r.col <- ceiling(255 * (1-n.c))
g.col <- ceiling(255 * (1-n.m))
b.col <- ceiling(255 * (1-n.y))
return(col2rgb(sprintf("#%02s%02s%02s",
as.hexmode(r.col),
as.hexmode(g.col),
as.hexmode(b.col))))}
plot(EarlyJurassicMap,col=cmyk(0.9176, 0.4235, 0.2941),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=cmyk(0.88, 0.18, 0.00, 0.29),lty=0,add=TRUE)
rm(cmyk)
plot(EarlyJurassicMap,col= "#42AED0",lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= "#42AED0",lty=0,add=TRUE)
plot(EarlyJurassicMap,col= c("#42AED0", 0.33),lty=0,add=TRUE)
plot(EarlyJurassicMap,col= c("#42AED0", 1),lty=0,add=TRUE)
plot(EarlyJurassicMap)
help(rgb)
color.early.Jura <- rgb(66, 174, 208, maxColorValue=66)
color.early.Jura <- rgb(66, 174, 208, maxColorValue=208)
plot(EarlyJurassicMap,col= color.early.Jura,lty=0,add=TRUE)
color.early.Jura <- rgb(66, 174, 208,0.3 ,maxColorValue=208)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= color.early.Jura,lty=0,add=TRUE)
plot(EarlyJurassicMap,col= color.early.Jura,lty=0,add=TRUE)
help(rgb)
color.early.Jura <- rgb(66, 174, 208,0.3 ,maxColorValue=0.3)
color.early.Jura <- rgb(66, 174, 208,0.3 ,maxColorValue=220)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= color.early.Jura,lty=0,add=TRUE)
plot(EarlyJurassicMap,col= color.early.Jura,lty=0,add=TRUE)
color.early.Jura <- rgb(66, 174, 208,0.3 ,maxColorValue=208)
color.early.Jura <- rgb(66, 174, 208,maxColorValue=208)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= color.early.Jura,lty=0,add=TRUE)
color.early.Jura <- rgb(0.33,66, 174, 208,maxColorValue=208)
plot(EarlyJurassicMap,col= color.early.Jura,lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= color.early.Jura,lty=0,add=TRUE)
color.early.Jura <- rgb(,66, 174,0,208,maxColorValue=208)
color.early.Jura <- rgb(66, 174,0,208,maxColorValue=208)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= color.early.Jura,lty=0,add=TRUE)
color.early.Jura <- rgb(66, 174,208)
plot(EarlyJurassicMap,col= rgb(66, 174,208, 0.33),lty=0,add=TRUE)
plot(EarlyJurassicMap,col= rgb(66, 174,208, 19),lty=0,add=TRUE)
plot(EarlyJurassicMap,col= rgb(66, 174,208, 208),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.33),lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.33),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.45),lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=rgb(1,0,0,0.45),lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=rgb(1,5,0,0.45),lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(1,0.4,0,0.45),lty=0,add=TRUE)
color.early.Jura <- rgb(66, 174,208, alpha = 0.33, maxColorValue = 208)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=color.early.Jura,lty=0,add=TRUE)
plot(EarlyJurassicMap, col= color.early.Jura,lty=0,add=TRUE)
plot(EarlyJurassicMap, color.early.Jura,lty=0,add=TRUE)
plot(EarlyJurassicMap,col = color.early.Jura,lty=0,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col=rgb(66, 174,208, alpha = 0.33, maxColorValue = 208) ,lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(66, 174,208, alpha = 1, maxColorValue = 208) ,lty=0,add=TRUE)
plot(EarlyJurassicMap,col=rgb(66, 174,208, alpha = 1, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(66, 174,208, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 1:15 maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 1:15, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 1:150, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 1:150, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 1:225, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 0:225, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 0:225, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 0:255, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 0:100, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 0:150, maxColorValue = 208) ,lty=1,add=TRUE)
h
h
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 0:150, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 0:150, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 0:150, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(66, 174,208, alpha = 0:150, maxColorValue = 208) ,lty=1,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:150, maxColorValue = 141) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 1:150, maxColorValue = 141) ,lty=1,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 1:150, maxColorValue = 141) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:100, maxColorValue = 141) ,lty=1,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:190, maxColorValue = 141) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:190, maxColorValue = 160) ,lty=1,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:190, maxColorValue = 160) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:200, maxColorValue = 250) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:250, maxColorValue = 250) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:100, maxColorValue = 250) ,lty=1,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:100, maxColorValue = 250) ,lty=1,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:400, maxColorValue = 500) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:500, maxColorValue = 500) ,lty=1,add=TRUE)
plot(EarlyJurassicMap)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:120, maxColorValue = 250) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:120, maxColorValue = 250) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:120, maxColorValue = 250) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:120, maxColorValue = 250) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:120, maxColorValue = 250) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:120, maxColorValue = 250) ,lty=1,add=TRUE)
plot(EarlyJurassicMap,col= rgb(4, 90,141, alpha = 0:120, maxColorValue = 250) ,lty=1,add=TRUE)
mislink <- data(MisLinks)
install.packages("networkD3")
library(networkD3)
mislink <- data(MisLinks)
head(mislink)
View(MisLinks)
misnod <- data("MisNodes")
View(MisNodes)
View(DataPBDB)
data.lepidosaur  <-  base::data.frame(paleobioDB::pbdb_occurrences(limit = "all", base_name = "lepidosauromorpha",  min_ma = 145, max_ma = 201.3,  show = c("coords", "phylo"), vocab = "pbdb"))
library(mapast)
install.packages("mapast")
install_github("macroecology/mapast")
library(devtools)
install.packages("devtools")
library(devtools)
library(devtools)
install.packages("devtools")
library(devtools)
<- <- <- <- <- <-
liss.data <- pbdb_occurrences(limit="all", vocab= "pbdb", base_name="Lissamphibia", show=c("coords", "phylo", "ident"))
<- <- <- <- <- <-
library(paleobioDB)
<- <- <- <- <- <-
install.packages("paleobioDB")
install.packages("paleobioDB")
library(paleobioDB)
library(devtools)
install_github("umerijaz/microbiomeSeq")
install.packages("DESeq2")
install.packages("phyloseq")
source('http://bioconductor.org/biocLite.R')
biocLite('phyloseq')
library(microbiomeSeq)
install_github("umerijaz/microbiomeSeq")
biocLite("DESeq2")
library(microbiomeSeq)
install_github("umerijaz/microbiomeSeq")
View(DataPBDB)
View(deney_cemre)
library(microbiomeSeq)
install_github("umerijaz/microbiomeSeq")
biocLite("adespatial")
plot.function(p^n, from = 0, to = 100, p= 0.7)
plot.function(x^n, from = 0, to = 100, x= 0.7)
eq <-  function(x){x^n)}
eq <-  function(x){x^n}
plot(eq(1:100), type= 'l')
eq <-  function(x,n){x^n}
plot.function(x^n, from = 0, to = 100, x= 0.7)
eq <-  function(n){0.7^n}
plot(eq(1:100), type= 'l')
eq <-  function(n){0.1^n}
plot(eq(1:100), type= 'l')
eq <-  function(n){0.9^n}
plot(eq(1:100), type= 'l')
eq <-  function(n){0^n}
plot(eq(1:100), type= 'l')
eq <-  function(n){1^n}
plot(eq(1:100), type= 'l')
eq <-  function(n){1^n}
plot(eq(1:100), type= 'l')
install.packages("blogdown")
library(blogdown)
setwd("~/Desktop/personal/blog_source")
build_site()
setwd("~/Desktop/deneme")
new_site(dir = 'blog_source',
theme = 'digitalcraftsman/hugo-strata-theme',
format = 'toml')
setwd("~/Desktop/deneme/blog_source")
build_site()
library(blogdown)
library(blogdown)
setwd("~/Desktop/blogdown")
new_site(dir = 'blog_source',
theme = 'vividvilla/ezhil',
format = 'toml')
setwd("~/Desktop/blogdown/blog_source")
build_site()
build_site()
build_site()
